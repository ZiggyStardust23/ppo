import { IPhoneRepository } from "./PhoneRepository";
import { Phone } from "./PhoneModel";
import { phoneCreateDTO, phoneFullDTO, phoneSearchDTO, returnPhoneDTO } from "./PhoneDTO";

export interface IPhoneService {
    findById(id: string, role: string): Promise<returnPhoneDTO | Error>;
    paginate(props: Partial<phoneSearchDTO>, pageNumber: number, pageSize: number, role: string): Promise<returnPhoneDTO[] | Error>;
    create(phone: phoneCreateDTO, role: string): Promise<returnPhoneDTO>;
    update(phone: phoneFullDTO, role: string): Promise<returnPhoneDTO | Error>;
}

export class PhoneService implements IPhoneService {
    constructor(private phoneRepository: IPhoneRepository) {}

    async findById(id: string, role: string): Promise<returnPhoneDTO | Error> {
        const phone = await this.phoneRepository.getById(id, role);
        if (phone == null){
            return Promise.reject(new Error("not found by id"));
        }
        return Promise.resolve(phone.toDTO());
    }

    async paginate(props: Partial<phoneSearchDTO>, pageNumber: number, pageSize: number, role: string): Promise<returnPhoneDTO[] | Error> {
        const phones =  await this.phoneRepository.paginate(props, pageNumber, pageSize, role);
        if (phones.length == 0){
            return Promise.reject(new Error("not found by this props"));
        }
        const phonesToReturn: returnPhoneDTO[] = [];
        for (let i = 0; i < phones.length; i++){
            phonesToReturn.push(phones[i].toDTO());
        }
        return Promise.resolve(phonesToReturn);
    }

    async create(phone: phoneCreateDTO, role: string): Promise<returnPhoneDTO> {
        const phoneToCreate = new Phone(
            '',
            phone.name,
            phone.producername,
            phone.osname,
            phone.ramsize,
            phone.memsize,
            phone.camres,
            phone.price,
            phone.warranty,
            phone.release_year,
            phone.type,
            phone.model,
            phone.producer_code,
            phone.back_panel_color,
            phone.edge_color,
            phone.manufacturer_declared_color,
            phone.frequencies_2g,
            phone.frequencies_3g,
            phone.lte_4g_support,
            phone.frequencies_4g_lte,
            phone.lte_advanced_support,
            phone.lte_advanced_speed_categories,
            phone.volte_support,
            phone.networks_5g_support,
            phone.frequencies_5g,
            phone.sim_card_format,
            phone.physical_sim_cards_count,
            phone.esim_count,
            phone.screen_size_inch,
            phone.screen_resolution,
            phone.screen_matrix_technology,
            phone.screen_matrix_type_detailed,
            phone.brightness,
            phone.screen_refresh_rate,
            phone.pixel_density,
            phone.aspect_ratio,
            phone.screen_colors_count,
            phone.body_type,
            phone.body_material,
            phone.ruggedness,
            phone.screen_protective_coating,
            phone.ip_rating,
            phone.screen_cutout_type,
            phone.os_version,
            phone.processor_model,
            phone.cores_count,
            phone.max_processor_frequency,
            phone.processor_configuration,
            phone.fabrication_process,
            phone.gpu,
            phone.ram_type,
            phone.ram_amount,
            phone.virtual_ram_extension,
            phone.internal_memory_amount,
            phone.memory_card_slot,
            phone.main_cameras_count,
            phone.main_camera_megapixels,
            phone.camera_modules_type,
            phone.main_camera_sensor_model,
            phone.main_camera_aperture,
            phone.main_camera_autofocus,
            phone.flash_type,
            phone.lens_field_of_view_angle,
            phone.optical_stabilization,
            phone.digital_zoom_photo,
            phone.optical_zoom_photo,
            phone.main_camera_resolution,
            phone.dxomark_rating_main_camera,
            phone.main_camera_features_technologies,
            phone.main_camera_shooting_modes_features,
            phone.video_shooting_format,
            phone.video_resolution_frame_rate,
            phone.slow_motion_video,
            phone.video_zoom,
            phone.video_playback_formats,
            phone.video_shooting_features_functions,
            phone.dual_front_camera,
            phone.front_camera_megapixels_count,
            phone.front_camera_aperture,
            phone.front_camera_autofocus,
            phone.built_in_flash,
            phone.front_camera_resolution,
            phone.dxomark_rating_selfie_camera,
            phone.front_camera_features_technologies,
            phone.front_camera_shooting_modes_features,
            phone.stereo_speakers,
            phone.audio_file_formats,
            phone.fm_radio,
            phone.bluetooth_version,
            phone.wifi_standard,
            phone.nfc,
            phone.navigation_systems,
            phone.ir_port,
            phone.other_data_transmission_technologies,
            phone.charging_interface,
            phone.headphone_jack,
            phone.otg_support,
            phone.sensors,
            phone.battery_type,
            phone.battery_capacity,
            phone.charger_voltage,
            phone.charger_output_power,
            phone.fast_charging,
            phone.fast_charging_standards,
            phone.wireless_charging_support,
            phone.reverse_wireless_charging_support,
            phone.music_playback_time,
            phone.video_playback_time,
            phone.biometric_protection,
            phone.headphones_included,
            phone.charger_included,
            phone.package_contents,
            phone.led_notification_indicator,
            phone.additional_features,
            phone.dimensions_and_weight
        );
        const phoneCreated = await this.phoneRepository.create(phoneToCreate, role);
        return Promise.resolve(phoneCreated.toDTO());
    }

    async update(phone: phoneFullDTO, role: string): Promise<returnPhoneDTO | Error> {
        const phoneToUpdate = new Phone(
            phone.id,
            phone.name,
            phone.producername,
            phone.osname,
            phone.ramsize,
            phone.memsize,
            phone.camres,
            phone.price,
            phone.warranty,
            phone.release_year,
            phone.type,
            phone.model,
            phone.producer_code,
            phone.back_panel_color,
            phone.edge_color,
            phone.manufacturer_declared_color,
            phone.frequencies_2g,
            phone.frequencies_3g,
            phone.lte_4g_support,
            phone.frequencies_4g_lte,
            phone.lte_advanced_support,
            phone.lte_advanced_speed_categories,
            phone.volte_support,
            phone.networks_5g_support,
            phone.frequencies_5g,
            phone.sim_card_format,
            phone.physical_sim_cards_count,
            phone.esim_count,
            phone.screen_size_inch,
            phone.screen_resolution,
            phone.screen_matrix_technology,
            phone.screen_matrix_type_detailed,
            phone.brightness,
            phone.screen_refresh_rate,
            phone.pixel_density,
            phone.aspect_ratio,
            phone.screen_colors_count,
            phone.body_type,
            phone.body_material,
            phone.ruggedness,
            phone.screen_protective_coating,
            phone.ip_rating,
            phone.screen_cutout_type,
            phone.os_version,
            phone.processor_model,
            phone.cores_count,
            phone.max_processor_frequency,
            phone.processor_configuration,
            phone.fabrication_process,
            phone.gpu,
            phone.ram_type,
            phone.ram_amount,
            phone.virtual_ram_extension,
            phone.internal_memory_amount,
            phone.memory_card_slot,
            phone.main_cameras_count,
            phone.main_camera_megapixels,
            phone.camera_modules_type,
            phone.main_camera_sensor_model,
            phone.main_camera_aperture,
            phone.main_camera_autofocus,
            phone.flash_type,
            phone.lens_field_of_view_angle,
            phone.optical_stabilization,
            phone.digital_zoom_photo,
            phone.optical_zoom_photo,
            phone.main_camera_resolution,
            phone.dxomark_rating_main_camera,
            phone.main_camera_features_technologies,
            phone.main_camera_shooting_modes_features,
            phone.video_shooting_format,
            phone.video_resolution_frame_rate,
            phone.slow_motion_video,
            phone.video_zoom,
            phone.video_playback_formats,
            phone.video_shooting_features_functions,
            phone.dual_front_camera,
            phone.front_camera_megapixels_count,
            phone.front_camera_aperture,
            phone.front_camera_autofocus,
            phone.built_in_flash,
            phone.front_camera_resolution,
            phone.dxomark_rating_selfie_camera,
            phone.front_camera_features_technologies,
            phone.front_camera_shooting_modes_features,
            phone.stereo_speakers,
            phone.audio_file_formats,
            phone.fm_radio,
            phone.bluetooth_version,
            phone.wifi_standard,
            phone.nfc,
            phone.navigation_systems,
            phone.ir_port,
            phone.other_data_transmission_technologies,
            phone.charging_interface,
            phone.headphone_jack,
            phone.otg_support,
            phone.sensors,
            phone.battery_type,
            phone.battery_capacity,
            phone.charger_voltage,
            phone.charger_output_power,
            phone.fast_charging,
            phone.fast_charging_standards,
            phone.wireless_charging_support,
            phone.reverse_wireless_charging_support,
            phone.music_playback_time,
            phone.video_playback_time,
            phone.biometric_protection,
            phone.headphones_included,
            phone.charger_included,
            phone.package_contents,
            phone.led_notification_indicator,
            phone.additional_features,
            phone.dimensions_and_weight
        )
        const phoneUpdated = await this.phoneRepository.update(phoneToUpdate, role);
        if (phoneUpdated == null){
            return Promise.reject(new Error("not found in db"));
        }
        return Promise.resolve(phoneUpdated.toDTO());
    }
}
export { Phone };

